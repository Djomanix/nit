#include "nit.common.h"
extern const int COLOR_mproject__MProject___64dname;
val* mproject__MProject__name(val* self);
void mproject__MProject__name_61d(val* self, val* p0);
extern const int COLOR_mproject__MProject___64dmodel;
val* mproject__MProject__model(val* self);
void mproject__MProject__model_61d(val* self, val* p0);
extern const int COLOR_mproject__MProject___64droot;
val* mproject__MProject__root(val* self);
void mproject__MProject__root_61d(val* self, val* p0);
extern const int COLOR_mproject__MProject___64dmgroups;
val* mproject__MProject__mgroups(val* self);
void mproject__MProject__mgroups_61d(val* self, val* p0);
extern const int COLOR_mproject__MProject__name;
val* mproject__MProject__to_s(val* self);
extern const int COLOR_mproject__MProject__name_61d;
extern const int COLOR_mproject__MProject__model_61d;
extern const int COLOR_mproject__Model__mprojects;
extern const int COLOR_abstract_collection__SimpleCollection__add;
extern const int COLOR_mproject__Model__mproject_by_name;
extern const int COLOR_more_collections__MultiHashMap__add_one;
void mproject__MProject__init(val* self, val* p0, val* p1);
extern const int COLOR_mproject__MGroup___64dname;
val* mproject__MGroup__name(val* self);
void mproject__MGroup__name_61d(val* self, val* p0);
extern const int COLOR_mproject__MGroup___64dmproject;
val* mproject__MGroup__mproject(val* self);
void mproject__MGroup__mproject_61d(val* self, val* p0);
extern const int COLOR_mproject__MGroup___64dparent;
val* mproject__MGroup__parent(val* self);
void mproject__MGroup__parent_61d(val* self, val* p0);
extern const int COLOR_mproject__MGroup__parent;
extern const int COLOR_mproject__MGroup__name;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arraykernel__Object;
extern const int COLOR_array__Array__with_capacity;
val* string__NativeString__to_s_with_length(char* self, long p0);
extern const int COLOR_mproject__MGroup__full_name;
extern const int COLOR_string__Object__to_s;
val* mproject__MGroup__full_name(val* self);
extern const int COLOR_mproject__MGroup___64din_nesting;
val* mproject__MGroup__in_nesting(val* self);
void mproject__MGroup__in_nesting_61d(val* self, val* p0);
extern const int COLOR_mproject__MGroup___64dfilepath;
val* mproject__MGroup__filepath(val* self);
void mproject__MGroup__filepath_61d(val* self, val* p0);
extern const int COLOR_mproject__MGroup__name_61d;
extern const int COLOR_mproject__MGroup__mproject_61d;
extern const int COLOR_mproject__MGroup__parent_61d;
extern const int COLOR_mproject__MProject__mgroups;
extern const int COLOR_poset__POSet__add_node;
extern const int COLOR_mproject__MGroup__in_nesting_61d;
extern const int COLOR_poset__POSet__add_edge;
void mproject__MGroup__init(val* self, val* p0, val* p1, val* p2);
val* mproject__MGroup__to_s(val* self);
extern const int COLOR_mproject__Model___64dmprojects;
val* mproject__Model__mprojects(val* self);
void mproject__Model__mprojects_61d(val* self, val* p0);
extern const int COLOR_mproject__Model___64dmproject_by_name;
val* mproject__Model__mproject_by_name(val* self);
void mproject__Model__mproject_by_name_61d(val* self, val* p0);
extern const int COLOR_abstract_collection__MapRead__has_key;
extern const int COLOR_abstract_collection__MapRead___91d_93d;
val* mproject__Model__get_mprojects_by_name(val* self, val* p0);
